"""initial migration

Revision ID: 6c10433bd8c1
Revises: 
Create Date: 2025-07-11 11:46:14.515149

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from models.patient import JSONEncodedList
# revision identifiers, used by Alembic.
revision = '6c10433bd8c1'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('phone_number', sa.String(length=15), nullable=True),
    sa.Column('role', postgresql.ENUM('DOCTOR', 'PATIENT', name='userrole'), nullable=False),
    sa.Column('email_confirmed', sa.Boolean(), nullable=True),
    sa.Column('password', sa.String(length=200), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('phone_number')
    )
    op.create_table('call_conversations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user1_id', sa.Integer(), nullable=False),
    sa.Column('user2_id', sa.Integer(), nullable=False),
    sa.Column('channal_name', sa.String(length=255), nullable=True),
    sa.Column('token', sa.String(length=255), nullable=True),
    sa.Column('last_call_time', sa.DateTime(), nullable=True),
    sa.Column('unread_calls_count', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user1_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user2_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('channal_name')
    )
    op.create_table('conversations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('participant1_id', sa.Integer(), nullable=False),
    sa.Column('participant2_id', sa.Integer(), nullable=False),
    sa.Column('chat_secret', sa.String(length=500), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['participant1_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['participant2_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('doctors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('date_of_birth', sa.Date(), nullable=True),
    sa.Column('gender', postgresql.ENUM('male', 'female', 'other', name='gender'), nullable=True),
    sa.Column('address', sa.String(length=200), nullable=True),
    sa.Column('image_path', sa.String(length=200), nullable=True),
    sa.Column('specialization', sa.String(length=100), nullable=True),
    sa.Column('blood_group', sa.String(length=100), nullable=True),
    sa.Column('sub_specialization', sa.String(length=100), nullable=True),
    sa.Column('years_of_experience', sa.String(length=100), nullable=True),
    sa.Column('qualification', sa.String(length=100), nullable=True),
    sa.Column('registration_number', sa.String(length=100), nullable=True),
    sa.Column('practice_name', sa.String(length=100), nullable=True),
    sa.Column('practice_address', sa.String(length=100), nullable=True),
    sa.Column('initial_consultation_fee', sa.Float(), nullable=True),
    sa.Column('session_type', sa.String(length=100), nullable=True),
    sa.Column('session_duration', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('password_reset_otps',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('otp', sa.String(length=6), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('patients',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('date_of_birth', sa.Date(), nullable=True),
    sa.Column('allergies', sa.String(length=200), nullable=True),
    sa.Column('address', sa.String(length=200), nullable=True),
    sa.Column('weight', sa.String(length=200), nullable=True),
    sa.Column('height', sa.String(length=200), nullable=True),
    sa.Column('blood_pressure', sa.String(length=200), nullable=True),
    sa.Column('pulse', sa.String(length=200), nullable=True),
    sa.Column('image_path', sa.String(length=200), nullable=True),
    sa.Column('gender_born_with', postgresql.ENUM('male', 'female', 'other', name='gender'), nullable=True),
    sa.Column('gender_identified_with', postgresql.ENUM('male', 'female', 'other', name='gender'), nullable=True),
    sa.Column('contact', sa.String(length=100), nullable=True),
    sa.Column('kin_relation', sa.String(length=100), nullable=True),
    sa.Column('kin_full_name', sa.String(length=100), nullable=True),
    sa.Column('kin_contact_number', sa.String(length=100), nullable=True),
    sa.Column('gp_details', sa.String(length=200), nullable=True),
    sa.Column('preferred_language', sa.String(length=50), nullable=True),
    sa.Column('has_physical_disabilities', sa.Boolean(), nullable=True),
    sa.Column('physical_disability_specify', sa.String(length=200), nullable=True),
    sa.Column('requires_wheelchair_access', sa.Boolean(), nullable=True),
    sa.Column('wheelchair_specify', sa.String(length=200), nullable=True),
    sa.Column('needs_special_communication', sa.Boolean(), nullable=True),
    sa.Column('communication_specify', sa.String(length=200), nullable=True),
    sa.Column('has_hearing_impairments', sa.Boolean(), nullable=True),
    sa.Column('hearing_specify', sa.String(length=200), nullable=True),
    sa.Column('has_visual_impairments', sa.Boolean(), nullable=True),
    sa.Column('visual_specify', sa.String(length=200), nullable=True),
    sa.Column('environmental_factors', sa.Text(), nullable=True),
    sa.Column('other_accessibility_needs', sa.Text(), nullable=True),
    sa.Column('has_health_insurance', sa.Boolean(), nullable=True),
    sa.Column('insurance_provider', sa.String(length=100), nullable=True),
    sa.Column('policy_number', sa.String(length=100), nullable=True),
    sa.Column('insurance_claim_contact', sa.String(length=100), nullable=True),
    sa.Column('linked_hospitals', sa.String(length=200), nullable=True),
    sa.Column('additional_health_benefits', sa.String(length=200), nullable=True),
    sa.Column('has_past_medical_history', sa.Boolean(), nullable=True),
    sa.Column('past_medical_history', JSONEncodedList(), nullable=True),
    sa.Column('has_family_history', sa.Boolean(), nullable=True),
    sa.Column('family_history', JSONEncodedList(), nullable=True),
    sa.Column('has_medication_history', sa.Boolean(), nullable=True),
    sa.Column('medication_history', JSONEncodedList(), nullable=True),
    sa.Column('has_allergies', sa.Boolean(), nullable=True),
    sa.Column('has_medication_allergatic', sa.Boolean(), nullable=True),
    sa.Column('medication_allergatic', sa.String(length=100), nullable=True),
    sa.Column('has_taking_medication', sa.Boolean(), nullable=True),
    sa.Column('taking_medication', sa.String(length=100), nullable=True),
    sa.Column('has_mental_medication', sa.Boolean(), nullable=True),
    sa.Column('mental_medication', sa.String(length=100), nullable=True),
    sa.Column('is_visited_psychiatrist', sa.String(length=100), nullable=True),
    sa.Column('has_diagnosis_history', sa.Boolean(), nullable=True),
    sa.Column('diagnosis_history',JSONEncodedList(), nullable=True),
    sa.Column('is_psychiatrically_hospitalized', sa.String(length=100), nullable=True),
    sa.Column('is_72_hour_mentally_detention_order', sa.String(length=100), nullable=True),
    sa.Column('has_detained_mental_health', sa.Boolean(), nullable=True),
    sa.Column('number_of_mentally_detained', sa.String(length=100), nullable=True),
    sa.Column('detained_mental_health_treatment', sa.String(length=100), nullable=True),
    sa.Column('has_seeking_help', sa.Boolean(), nullable=True),
    sa.Column('seeking_help', sa.String(length=100), nullable=True),
    sa.Column('is_planned_pregnancy', sa.String(length=100), nullable=True),
    sa.Column('is_maternal_substance_use_during_pregnancy', sa.String(length=100), nullable=True),
    sa.Column('is_birth_delayed', sa.String(length=100), nullable=True),
    sa.Column('is_birth_induced', sa.String(length=100), nullable=True),
    sa.Column('is_birth_hypoxia', sa.String(length=100), nullable=True),
    sa.Column('is_immediate_post_natal_complications', sa.String(length=100), nullable=True),
    sa.Column('is_require_oxygen_or_incubator', sa.String(length=100), nullable=True),
    sa.Column('is_feed_well_as_newborn', sa.String(length=100), nullable=True),
    sa.Column('is_sleep_well_as_newborn', sa.String(length=100), nullable=True),
    sa.Column('has_family_mental_health_history', sa.Boolean(), nullable=True),
    sa.Column('family_relationship_details', sa.String(length=100), nullable=True),
    sa.Column('family_mental_health_condition', sa.String(length=100), nullable=True),
    sa.Column('has_been_hospitalized_for_mental_health', sa.Boolean(), nullable=True),
    sa.Column('number_of_admissions', sa.String(length=100), nullable=True),
    sa.Column('duration', sa.String(length=100), nullable=True),
    sa.Column('outcome', sa.String(length=100), nullable=True),
    sa.Column('shower_ability', sa.String(length=100), nullable=True),
    sa.Column('shower_frequency', sa.String(length=100), nullable=True),
    sa.Column('dressing_ability', sa.String(length=100), nullable=True),
    sa.Column('eating_ability', sa.String(length=100), nullable=True),
    sa.Column('food_type', sa.String(length=100), nullable=True),
    sa.Column('toileting_ability', sa.String(length=100), nullable=True),
    sa.Column('grooming_ability', sa.String(length=100), nullable=True),
    sa.Column('menstrual_management', sa.String(length=100), nullable=True),
    sa.Column('household_tasks', sa.String(length=100), nullable=True),
    sa.Column('daily_affairs', sa.String(length=100), nullable=True),
    sa.Column('safety_mobility', sa.String(length=100), nullable=True),
    sa.Column('has_depressive_illness', sa.Boolean(), nullable=True),
    sa.Column('depressive_frequency', sa.String(length=100), nullable=True),
    sa.Column('mood_level', sa.Float(), nullable=True),
    sa.Column('mood_worse_in_morning', sa.Boolean(), nullable=True),
    sa.Column('mood_constantly_low', sa.Boolean(), nullable=True),
    sa.Column('can_smile', sa.Boolean(), nullable=True),
    sa.Column('can_laugh', sa.Boolean(), nullable=True),
    sa.Column('has_normal_appetite_and_enjoyment', sa.Boolean(), nullable=True),
    sa.Column('enjoyment_activities_description', sa.String(length=500), nullable=True),
    sa.Column('has_crying', sa.Boolean(), nullable=True),
    sa.Column('cry_frequency', sa.String(length=100), nullable=True),
    sa.Column('feels_life_worth', sa.Boolean(), nullable=True),
    sa.Column('has_suicidal_thoughts', sa.Boolean(), nullable=True),
    sa.Column('suicidal_frequency', sa.String(length=100), nullable=True),
    sa.Column('feels_not_want_to_be_here', sa.Boolean(), nullable=True),
    sa.Column('not_want_to_be_here_frequency', sa.String(length=100), nullable=True),
    sa.Column('want_to_die', sa.Boolean(), nullable=True),
    sa.Column('want_to_die_frequency', sa.String(length=100), nullable=True),
    sa.Column('has_ending_life_thoughts', sa.Boolean(), nullable=True),
    sa.Column('has_tried_ending_life', sa.Boolean(), nullable=True),
    sa.Column('life_ending_methods_details', sa.String(length=500), nullable=True),
    sa.Column('has_injuries', sa.Boolean(), nullable=True),
    sa.Column('injuries_description', sa.String(length=500), nullable=True),
    sa.Column('has_hospital_admission', sa.Boolean(), nullable=True),
    sa.Column('hospital_admission_details', sa.String(length=500), nullable=True),
    sa.Column('has_self_harmed', sa.Boolean(), nullable=True),
    sa.Column('self_harmed_methods', sa.String(length=500), nullable=True),
    sa.Column('has_acquired_injury', sa.Boolean(), nullable=True),
    sa.Column('acquired_injury_description', sa.String(length=500), nullable=True),
    sa.Column('has_guilt', sa.Boolean(), nullable=True),
    sa.Column('guilt_reason', sa.String(length=500), nullable=True),
    sa.Column('blood_vessel_damage', sa.Boolean(), nullable=True),
    sa.Column('nerve_damage', sa.Boolean(), nullable=True),
    sa.Column('required_stitches', sa.Boolean(), nullable=True),
    sa.Column('required_surgery', sa.Boolean(), nullable=True),
    sa.Column('permanent_damage_from_self_harm', sa.Boolean(), nullable=True),
    sa.Column('has_confidence_and_self_esteem', sa.Boolean(), nullable=True),
    sa.Column('self_esteem_level', sa.Float(), nullable=True),
    sa.Column('overly_happy_frequency', sa.String(length=100), nullable=True),
    sa.Column('excessively_flirty', sa.Boolean(), nullable=True),
    sa.Column('increased_sex_drive', sa.Boolean(), nullable=True),
    sa.Column('reckless_spending', sa.Boolean(), nullable=True),
    sa.Column('undressed_in_public', sa.Boolean(), nullable=True),
    sa.Column('buys_beyond_means', sa.Boolean(), nullable=True),
    sa.Column('high_risk_activities', sa.Boolean(), nullable=True),
    sa.Column('inflated_self_esteem', sa.Boolean(), nullable=True),
    sa.Column('feels_superior', sa.Boolean(), nullable=True),
    sa.Column('believes_in_powers', sa.Boolean(), nullable=True),
    sa.Column('feels_wealthy_or_genius', sa.Boolean(), nullable=True),
    sa.Column('anger_level', sa.String(length=100), nullable=True),
    sa.Column('agitation_level', sa.String(length=100), nullable=True),
    sa.Column('low_mood_duration', sa.String(length=100), nullable=True),
    sa.Column('elated_mood_duration', sa.String(length=100), nullable=True),
    sa.Column('selected_physical_symptom', sa.String(length=100), nullable=True),
    sa.Column('mood_levels', sa.Float(), nullable=True),
    sa.Column('mood_affect_life', sa.String(length=100), nullable=True),
    sa.Column('extreme_energy_periods', sa.String(length=100), nullable=True),
    sa.Column('reckless_spending_frequency', sa.String(length=100), nullable=True),
    sa.Column('is_taking_medications', sa.Boolean(), nullable=True),
    sa.Column('alcohol_drug_use_frequency', sa.String(length=100), nullable=True),
    sa.Column('medical_conditions', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('appointments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('doctor_id', sa.Integer(), nullable=False),
    sa.Column('appointment_date', sa.Date(), nullable=False),
    sa.Column('appointment_time', sa.Time(), nullable=False),
    sa.Column('appointment_mode', postgresql.ENUM('online', 'in-person', name='appointment_mode'), nullable=False),
    sa.Column('status', postgresql.ENUM('confirmed', 'canceled', 'pending', name='appointment_status'), nullable=False),
    sa.Column('duration', sa.Integer(), nullable=True),
    sa.Column('reason', postgresql.ENUM('consultation', 'follow-up', 'check-up', name='appointment_reason'), nullable=False),
    sa.Column('fee', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('payment_mode', postgresql.ENUM('cash', 'credit card', 'bank transfer', 'cheque', name='payment_mode'), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['doctor_id'], ['doctors.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('call_records',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('call_conversation_id', sa.Integer(), nullable=False),
    sa.Column('caller_id', sa.Integer(), nullable=False),
    sa.Column('receiver_id', sa.Integer(), nullable=False),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('call_status', sa.String(length=50), nullable=False),
    sa.Column('call_type', sa.String(length=50), nullable=False),
    sa.Column('duration', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['call_conversation_id'], ['call_conversations.id'], ),
    sa.ForeignKeyConstraint(['caller_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['receiver_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('doctor_patient',
    sa.Column('doctor_id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['doctor_id'], ['doctors.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.PrimaryKeyConstraint('doctor_id', 'patient_id')
    )
    op.create_table('health_tracker',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('weight', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('height', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('BMI', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('blood_pressure', sa.String(length=20), nullable=True),
    sa.Column('pulse_rate', sa.Integer(), nullable=True),
    sa.Column('steps_count', sa.Integer(), nullable=True),
    sa.Column('calories_burned', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('messages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('conversation_id', sa.Integer(), nullable=False),
    sa.Column('sender_id', sa.Integer(), nullable=False),
    sa.Column('receiver_id', sa.Integer(), nullable=False),
    sa.Column('encrypted_message', sa.Text(), nullable=False),
    sa.Column('message_type', sa.String(length=20), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('is_read', sa.Boolean(), nullable=True),
    sa.Column('read_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversations.id'], ),
    sa.ForeignKeyConstraint(['receiver_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['sender_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('notes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('notes_title', sa.String(length=255), nullable=False),
    sa.Column('notes_description', sa.Text(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('doctor_id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['doctor_id'], ['doctors.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reports',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('doctor_id', sa.Integer(), nullable=False),
    sa.Column('report_name', sa.String(length=100), nullable=False),
    sa.Column('report_type', sa.String(length=50), nullable=False),
    sa.Column('report_date', sa.String(length=50), nullable=False),
    sa.Column('report_time', sa.String(length=50), nullable=False),
    sa.Column('file_url', sa.String(length=200), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['doctor_id'], ['doctors.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tasks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('doctor_id', sa.Integer(), nullable=False),
    sa.Column('task_title', sa.String(length=100), nullable=False),
    sa.Column('task_priority', postgresql.ENUM('low', 'medium', 'high', name='task_priority'), nullable=False),
    sa.Column('task_category', postgresql.ENUM('patient care', 'admin', 'follow up', 'regular', name='task_category'), nullable=False),
    sa.Column('task_due_date', sa.Date(), nullable=False),
    sa.Column('task_due_time', sa.Time(), nullable=False),
    sa.Column('task_description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['doctor_id'], ['doctors.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('doctor_id', sa.Integer(), nullable=False),
    sa.Column('report_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('method', sa.String(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['doctor_id'], ['doctors.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.ForeignKeyConstraint(['report_id'], ['reports.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('invoices',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('doctor_id', sa.Integer(), nullable=False),
    sa.Column('payment_id', sa.Integer(), nullable=False),
    sa.Column('invoice_number', sa.String(length=50), nullable=False),
    sa.Column('amount_due', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('due_date', sa.Date(), nullable=False),
    sa.Column('payment_status', postgresql.ENUM('paid', 'pending', 'overdue', name='payment_status'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['doctor_id'], ['doctors.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.ForeignKeyConstraint(['payment_id'], ['payments.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('invoice_number')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('invoices')
    op.drop_table('payments')
    op.drop_table('tasks')
    op.drop_table('reports')
    op.drop_table('notes')
    op.drop_table('messages')
    op.drop_table('health_tracker')
    op.drop_table('doctor_patient')
    op.drop_table('call_records')
    op.drop_table('appointments')
    op.drop_table('patients')
    op.drop_table('password_reset_otps')
    op.drop_table('doctors')
    op.drop_table('conversations')
    op.drop_table('call_conversations')
    op.drop_table('users')
    # ### end Alembic commands ###
