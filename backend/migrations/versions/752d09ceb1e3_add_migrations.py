"""Add migrations

Revision ID: 752d09ceb1e3
Revises: 
Create Date: 2025-06-19 16:00:57.827911

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '752d09ceb1e3'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tasks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('task_name', sa.String(length=100), nullable=False),
    sa.Column('task_priority', sa.Enum('low', 'medium', 'high', name='task_priority'), nullable=True),
    sa.Column('task_category', sa.Enum('consultation', 'check-up', 'follow-up', name='task_category'), nullable=True),
    sa.Column('task_due_date', sa.Date(), nullable=False),
    sa.Column('task_description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('phone_number', sa.String(length=15), nullable=True),
    sa.Column('role', postgresql.ENUM('DOCTOR', 'PATIENT', name='userrole'), nullable=False),
    sa.Column('email_confirmed', sa.Boolean(), nullable=True),
    sa.Column('password', sa.String(length=200), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('phone_number')
    )
    op.create_table('doctors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('date_of_birth', sa.Date(), nullable=True),
    sa.Column('gender', postgresql.ENUM('male', 'female', 'other', name='gender'), nullable=True),
    sa.Column('address', sa.String(length=200), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('password_reset_otps',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('otp', sa.String(length=6), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('patients',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('date_of_birth', sa.Date(), nullable=True),
    sa.Column('gender', postgresql.ENUM('male', 'female', 'other', name='gender'), nullable=True),
    sa.Column('allergies', sa.String(length=200), nullable=True),
    sa.Column('address', sa.String(length=200), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('appointments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('doctor_id', sa.Integer(), nullable=False),
    sa.Column('appointment_date', sa.Date(), nullable=False),
    sa.Column('appointment_time', sa.Time(), nullable=False),
    sa.Column('appointment_mode', postgresql.ENUM('online', 'in-person', name='appointment_mode'), nullable=False),
    sa.Column('status', postgresql.ENUM('confirmed', 'canceled', 'pending', name='appointment_status'), nullable=False),
    sa.Column('reason', postgresql.ENUM('consultation', 'follow-up', 'check-up', name='appointment_reason'), nullable=False),
    sa.Column('fee', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('payment_mode', postgresql.ENUM('cash', 'credit card', 'bank transfer', 'cheque', name='payment_mode'), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['doctor_id'], ['doctors.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('doctor_patient',
    sa.Column('doctor_id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['doctor_id'], ['doctors.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.PrimaryKeyConstraint('doctor_id', 'patient_id')
    )
    op.create_table('health_tracker',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('weight', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('height', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('BMI', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('blood_pressure', sa.String(length=20), nullable=True),
    sa.Column('pulse_rate', sa.Integer(), nullable=True),
    sa.Column('steps_count', sa.Integer(), nullable=True),
    sa.Column('calories_burned', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('invoices',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('invoice_number', sa.String(length=50), nullable=False),
    sa.Column('amount_due', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('due_date', sa.Date(), nullable=False),
    sa.Column('payment_status', postgresql.ENUM('paid', 'pending', 'overdue', name='payment_status'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('invoice_number')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('invoices')
    op.drop_table('health_tracker')
    op.drop_table('doctor_patient')
    op.drop_table('appointments')
    op.drop_table('patients')
    op.drop_table('password_reset_otps')
    op.drop_table('doctors')
    op.drop_table('users')
    op.drop_table('tasks')
    # ### end Alembic commands ###
